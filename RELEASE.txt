3.0: More features, build changes
- Add method for returning a point as a pair of affine coordinates
- Add method to check if a channel has data available
- Allow sending and receiving STL vectors without specifying the size
- Extend Vec with a SubVector, operator== and operator!= methods
- Begin Shamir code refactor and move all of it into details namespace
- bugs:
  - fix scalar multiplication for secp256k1_order
  - fix compilation error on g++12
- build:
  - build tests with -fsanitize=address
  - disable actions for master branch
  - add clang-tidy action

2.1: More Finite Fields
- Provide a FF implementation for computations modulo the order of Secp256k1
- Extend EC with support for scalar multiplications with scalars from a finite
  field of size the order of a subgroup.

2.0: Elliptic curves and finite field refactoring
- Make it simpler to define new finite fields
- Include optional (but enabled by default) support for elliptic curves
  - Implement secp256k1
- Include optional (but enabled by default) support for multi-precision integers
- Significantly increase test coverage
- Make header guards standard compliant
- Rename FF<Bits> to Fp<Bits>.
- Move class FF into scl namespace.

1.1: Refactoring of finite field internals
- Finite field operations are now defined by individual specializations of
  templated functions
- Remove DEFINE_FINITE_FIELD macro
- Move Mersenne61 and Mersenne127 definitions into ff.h

1.0: Initial public version of SCL.
- Features:
  - Math:
    - Finite Field class with two instantiations based on Mersenne primes
    - Ring modulo 2^K, with support for any K less than or equal to 128
    - Vectors. This is a thinish wrapper around an STL vector
    - Matrices
    - All math types support serialization
  - Primitives:
    - PRG based on AES-CTR
    - IUF Hash based on SHA3
  - Networking:
    - Basic support for peer-to-peer communication via TCP. Channels are
      designed in such a way that writing custom ones (or decorators for
      existing channels) is easy
    - Peer discovery functionality to make it easier to setup working networks
  - Secret Sharing:
    - Shamir secret sharing with support for both error detection and correction
    - Additive secret sharing
- Development:
  - Decent code coverage
  - Documentation
